services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - NODE_ENV=${NODE_ENV}
      - AUTH_SECRET=${AUTH_SECRET}
      - DATABASE_URL_EXTERNAL=${DATABASE_URL_EXTERNAL}
      - DATABASE_URL=${DATABASE_URL}
      - RESEND_KEY=${RESEND_KEY}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - my_network

  migrate:
    build:
      context: .
      dockerfile: Dockerfile.migrate
    environment:
      - NODE_ENV=${NODE_ENV}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_URL_EXTERNAL=${DATABASE_URL_EXTERNAL}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - my_network

  db:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  my_network:
    name: my_network
    driver: bridge
